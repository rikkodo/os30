#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import struct

SIZE = 1440 * 1024
LINE = 16


MAIN = [
    [0x0000, [0xeb, 0x4e, 0x90, 0x48, 0x45, 0x4c, 0x4c, 0x4f, 0x49, 0x50, 0x4c, 0x00, 0x02, 0x01, 0x01, 0x00]],  # 0000
    [0x0010, [0x02, 0xe0, 0x00, 0x40, 0x0b, 0xf0, 0x09, 0x00, 0x12, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]],  # 0010
    [0x0020, [0x40, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x29, 0xff, 0xff, 0xff, 0xff, 0x48, 0x45, 0x4c, 0x4c, 0x4f]],  # 0020
    [0x0030, [0x2d, 0x4f, 0x53, 0x20, 0x20, 0x20, 0x46, 0x41, 0x54, 0x31, 0x32, 0x20, 0x20, 0x20, 0x00, 0x00]],  # 0030
    [0x0040, [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]],  # 0040
    [0x0050, [0xb8, 0x00, 0x00, 0x8e, 0xd0, 0xbc, 0x00, 0x7c, 0x8e, 0xd8, 0x8e, 0xc0, 0xbe, 0x74, 0x7c, 0x8a]],  # 0050
    [0x0060, [0x04, 0x83, 0xc6, 0x01, 0x3c, 0x00, 0x74, 0x09, 0xb4, 0x0e, 0xbb, 0x0f, 0x00, 0xcd, 0x10, 0xeb]],  # 0060
    [0x0070, [0xee, 0xf4, 0xeb, 0xfd, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72]],  # 0070
    [0x0080, [0x6c, 0x64, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]],  # 0080
    # ~~~~~
    [0x01f0, [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xaa]],  # 01f0
    [0x0200, [0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]],  # 0200
    # ~~~~~
    [0x1400, [0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]],  # 1400
    # ~~~~~
    [-1,     [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]],  # 0000
]

if __name__ == "__main__":
    fname = ""
    if (len(sys.argv) == 1):
        fname = "void.img"
    else:
        fname = sys.argv[1]
    f = open(fname, "wb")
    i = 0
    m = 0

    while(i < SIZE / LINE):
        if (i * LINE == MAIN[m][0]):
            for j in range(0, LINE):
                f.write(struct.pack("B", MAIN[m][1][j]))
            m += 1
        else:
            for j in range(0, LINE):
                f.write("\0")
        i += 1

    f.close()
